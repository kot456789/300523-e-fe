1. Создать NavMenu (Main, Categories), MainPage, CategoriesPage
2. Настроить роутинг - при клике на Main, Categories перебрасывает на соответствующие страницы
3. Стилизовать NavMenu
4. Создать store и подключить его к приложению
5. Создать categoriesReducer и поместить его в rootReducer
6. Создать loadCategoriesAction и прописать для него логику в categoriesReducer
7. Создать CategoriesContainer и CategoryCard
8. Импортировать CategoriesContainer в CategoriesPage
9. Установить redux-thunk: npm i redux-thunk. Подключить middleware к store
10. Написать функцию getCategories(), которая отправляет запрос по ссылке https://fakestoreapi.com/products/categories и полученные данные записывает в состояние categories
11. Отрисовать карточки категорий из categoriesData. 
12. Стилизовать карточки категорий и контейнер
13. Создать ProductsByCategoryPage и подключить к роутингу (/products/:category)
14. При клике на карточку категории перебрасывать на соответствующий роут
15. Создать productsByCategoryReducer и поместить его в rootReducer

======
16. Написать loadProductsByCategoryAction и прописать логику в productsByCategoryReducer
17. Написать функцию getProductsByCategory(), которая отправляет запрос и полученные данные записывать в state
18. Проверить в консоли состояние
19. Из полученных данных отрисовать карточки (image, title, price)товаров.
20. Стилизовать карточки и контейнер (грид)

21. Создать SingleProductPage и включить в роутинг (/product/:id)
22. При клике на карточку товара перебрасывает на SingleProductPage и в роут подставляется айди товара
23. Создать singleProductReducer и поместить его в rootReducer
24. Создать loadSingleProductAction и прописать его логику в singleProductReducer
25. Написать функцию getSingleProduct, которая отправляет запрос по ссылке https://fakestoreapi.com/products/:id и передает полученные данные в singleProductReducer 
26. Вызвать функцию getSingleProduct на странице SingleProductPage
27. В консоли проверить записался ли ответ по запросу в состояние
28. Создать CartPage. Подключить к роутингу (/cart)
29. В NavMenu добавить пункт Cart, при клике на который перебрасывает на CartPage.
30. Создать cartReducer и поместить его в rootReducer
31. Добавить кнопку Add to cart в двух местах - ProductCard и SingleProductPage
32. Создать addToCartAction и прописать логику addToCartAction в cartReducer
33. Создать CartItem и CartItemsContainer
34. CartItemsContainer поместить в CartPage
35. На странице SingleProductPage при клике на кнопку 'Add to cart' вызывать функцию addToCartAction
36. В CartItemsContainer достать из store состояние cart и отрисовывать из него карточки (CartItem) - image, title, price, count (-+)
37. Написать deleteCartItemAction, прописать логику в cartReducer
38. При клике на крестик в CartItem вызывать deleteCartItemAction
39. Реализовать incrCountAction, прописать логику в cartReducer, вызывать при клике на +
40. Реализовать decrCountAction, прописать логику в cartReducer, вызывать при клике на -